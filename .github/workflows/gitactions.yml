# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

# TESTING WITH TAGS AND SHA
#    - name: Build and Push to Dockerhub
#      uses: docker/build-push-action@v6
#      with:
#        image: maxfine22/blog-app
#        registry: docker.io
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and Push to Dockerhub with gitSha Tags
      uses: docker/build-push-action@v6
      with:
        image: maxfine22/blog-app
        tags:  maxfine22/blog-app:${{ github.sha }} # Use Git SHA as a tag
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        labels: |
          org.opencontainers.image.title=Blog App
          org.opencontainers.image.description=An example blog application built with Docker
          org.opencontainers.image.version=${{ github.sha }}
          org.opencontainers.image.authors=Maxwell Adomako

